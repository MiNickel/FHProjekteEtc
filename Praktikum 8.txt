Aufgabe 1, Teil 1:

Formulieren Sie eine Query, mit der Sie herausfinden, welche Angestellten die
höchste und welche die niedrigste Kommission erhalten. Angezeigt werden soll der
Name und die Kommission. Ein Statement.

Lösung: 

SELECT name, kommission
FROM ANGESTELLTER
WHERE kommission = (SELECT MAX(kommission)
		FROM ANGESTELLTER)
OR kommission = (SELECT MIN(kommission)
		FROM ANGESTELLTER)

Aufgabe 1, Teil 2:

Lassen Sie sich die durchschnittliche Verleihgebühr pro Filmgenre anzeigen. Ein
Statement mit explizitem Join.

Und jetzt die durchschnittliche Verleihgebühr pro Filmgenre wenn diese größer ist als
249 Euro Cent. Auch ein Statement mit explizitem Join.

Lösung:

SELECT titel.fil_genre, ROUND(AVG(preisstufe.gebuehr),2) AS Durchschnittsgebühr
FROM titel JOIN preisstufe ON titel.preisstufe_id = preisstufe.id
WHERE titel.fil_genre IS NOT NULL
GROUP BY titel.fil_genre

SELECT titel.fil_genre, ROUND(AVG(preisstufe.gebuehr),2) AS Durchschnittsgebühr
FROM titel JOIN preisstufe ON titel.preisstufe_id = preisstufe.id
WHERE titel.fil_genre IS NOT NULL
GROUP BY titel.fil_genre
HAVING ROUND(AVG(preisstufe.gebuehr),2) > 2.49

Aufgabe 2:

Zum Einfügen des ersten Datensatzes (siehe Vorlesung) fehlt die Information, auf
welchem Server die Lizenzen von "Lost in Translation" gespeichert werden sollten.
Finden Sie das heraus. Ein Statement mit expliziten Joins (Und ja, es soll gruppiert
werden…). Sie sollen allerdings nur die benötigte Information in einer anschaulichen
Ausgabe beschaffen – Einfügen müssen Sie nicht!

Lösung:

SELECT titel.fil_genre, lizenz.server, COUNT(lizenz.server) AS Anzahl
FROM titel JOIN titel_lizenz ON titel.id = titel_lizenz.titel_id
JOIN lizenz ON lizenz.id = titel_lizenz.lizenz_id
WHERE lizenz.server LIKE "Server%"
GROUP BY titel.fil_genre, lizenz.server
ORDER BY titel.fil_genre



